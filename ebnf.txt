program      : (statement SEMI_COLON | block)+

statement    : declaration
             | assignment
             | print_stmt
             | if_stmt
             | while_stmt

declaration  : TYPE IDENTIFIER ASSIGN expression
assignment   : IDENTIFIER ASSIGN expression
             | IDENTIFIER OP_ASSIGN expression

print_stmt   : PRINT OPEN_PAREN expression CLOSE_PAREN

if_stmt      : IF OPEN_PAREN condition CLOSE_PAREN block elif_stmt? else_stmt?
elif_stmt    : ELIF OPEN_PAREN condition CLOSE_PAREN block elif_stmt?
else_stmt    : ELSE block

while_stmt   : WHILE OPEN_PAREN condition CLOSE_PAREN block

condition    : condition LOGICAL_OR condition
             | condition LOGICAL_AND condition
             | expression REL_OP expression
             | OPEN_PAREN condition CLOSE_PAREN

expression   : expression ADD expression
             | expression SUB expression
             | expression MUL expression
             | expression DIV expression
             | OPEN_PAREN expression CLOSE_PAREN
             | IDENTIFIER
             | NUMBER
             | STRING

block        : OPEN_BRACE (statement SEMI_COLON | block)* CLOSE_BRACE

TYPE         : "int" | "float"
IDENTIFIER   : [a-zA-Z_][a-zA-Z0-9_]*
ASSIGN       : "="
OP_ASSIGN    : "+=" | "-="
ADD          : "+"
SUB          : "-"
MUL          : "*"
DIV          : "/"
REL_OP       : "==" | "!=" | "<" | ">" | "<=" | ">="
LOGICAL_OR   : "||"
LOGICAL_AND  : "&&"
NUMBER       : [0-9]+ ("." [0-9]+)?
STRING       : "\"" .*? "\""
PRINT        : "print"
IF           : "if"
ELIF         : "elif"
ELSE         : "else"
WHILE        : "while"
OPEN_PAREN   : "("
CLOSE_PAREN  : ")"
OPEN_BRACE   : "{"
CLOSE_BRACE  : "}"
SEMI_COLON   : ";"